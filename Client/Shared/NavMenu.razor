@using System.Threading;
@using System.Text;

@code
{
	private bool ShowNavMenu = true;
	private bool WantShowDetailed = false;
	private bool ShowDetailed = false;
	private string NavMenuCSS => ShowNavMenu ? "collapse" : null;
	private string DetailedCSS => ShowDetailed ? "collapse" : null;
	private string[] Names = new string[]
	{
		"Home Page",
		"Curriculum Vitae",
		"App Portfolio",
		"3D Portfolio"
	};
	private Dictionary<string, string> RefNames = new Dictionary<string, string>();
	private Dictionary<string, string> DisplayNames = new Dictionary<string, string>();
	private Dictionary<string, IList<int>> Pool = new Dictionary<string, IList<int>>();
	private Dictionary<string, StringBuilder> Builders = new Dictionary<string, StringBuilder>();
	private Dictionary<string, int> Counters = new Dictionary<string, int>();
	private Dictionary<string, Timer> Timers = new Dictionary<string, Timer>();

	protected override void OnInitialized()
	{
		base.OnInitialized();
		foreach (string name in Names)
		{
			RefNames.Add(name, name);
		}
	}

	private void ToggleNavMenu()
	{
		ShowNavMenu = !ShowNavMenu;
	}

	private void HandleHover()
	{
		if (!ShowDetailed)
		{
			foreach (string name in Names)
			{
				int len = name.Length;
				int delay = (len * 500) / (len * len);
				DisplayNames[name] = "";
				Pool[name] = new List<int>(len);
				Builders[name] = new StringBuilder(len);
				Counters[name] = 0;
				Timer timer = new Timer(((Object state) => Typewriter(state, name)), new AutoResetEvent(false), 0, delay);
				Timers[name] = timer;
			}
		}
		WantShowDetailed = true;
		ShowDetailed = true;
	}

	private async Task HandleUnhover()
	{
		WantShowDetailed = false;
		await Task.Delay(1000);
		if (!WantShowDetailed)
		{
			ShowDetailed = false;
		}
	}

	private void Typewriter(Object state, string name)
	{
		int len = name.Length;
		int threshold = len / 2;
		Random random = new Random();
		if (Counters[name] < len)
		{
			char c = Convert.ToChar(random.Next(33, 122));
			Builders[name].Append(c);
			Pool[name].Add(Counters[name]);
		}
		if (Counters[name] >= threshold)
		{
			int index = Pool[name][random.Next(0, Pool[name].Count)];
			Builders[name][index] = RefNames[name][index];
			Pool[name].Remove(index);
		}
		Counters[name]++;
		DisplayNames[name] = Builders[name].ToString();
		if (Counters[name] >= len + threshold)
		{
			Timers[name].Dispose();
		}
		this.StateHasChanged();
	}
}

<div class="top-row navbar navbar-dark">
	<a class="navbar-brand" href="">
		<img class="icon-big" src="resources/ML.png" alt="Main Logo" />
	</a>
	<button class="navbar-toggler" @onclick="ToggleNavMenu">
		<span class="navbar-toggler-icon"></span>
	</button>
</div>

<div class="@NavMenuCSS" @onclick="ToggleNavMenu" @onmouseover="HandleHover" @onmouseout="HandleUnhover">
	<ul class="nav flex-column">
		<li class="nav-item px-3">
			<NavLink class="nav-link" href="" Match="NavLinkMatch.All">
				<span class="oi" aria-hidden="true"></span> HP
			</NavLink>
		</li>
		<li class="nav-item px-3">
			<NavLink class="nav-link" href="cv" Match="NavLinkMatch.All">
				<span class="oi" aria-hidden="true"></span> CV
			</NavLink>
		</li>
		<li class="nav-item px-3">
			<NavLink class="nav-link" href="app" Match="NavLinkMatch.All">
				<span class="oi" aria-hidden="true"></span> AP
			</NavLink>
		</li>
		<li class="nav-item px-3">
			<NavLink class="nav-link" href="3d" Match="NavLinkMatch.All">
				<span class="oi" aria-hidden="true"></span> 3D
			</NavLink>
		</li>
	</ul>
</div>

@if (ShowDetailed)
{
	<div class="side-popup" @onmouseover="HandleHover" @onmouseout="HandleUnhover">
		<ul class="nav flex-column">
			<li class="nav-item px-3">
				<NavLink class="side-popup-item nav-link" href="" Match="NavLinkMatch.All">
					<span class="oi" aria-hidden="true"></span> @DisplayNames["Home Page"]
				</NavLink>
			</li>
			<li class="nav-item px-3">
				<NavLink class="side-popup-item nav-link" href="cv" Match="NavLinkMatch.All">
					<span class="oi" aria-hidden="true"></span> @DisplayNames["Curriculum Vitae"]
				</NavLink>
			</li>
			<li class="nav-item px-3">
				<NavLink class="side-popup-item nav-link" href="app" Match="NavLinkMatch.All">
					<span class="oi" aria-hidden="true"></span> @DisplayNames["App Portfolio"]
				</NavLink>
			</li>
			<li class="nav-item px-3">
				<NavLink class="side-popup-item nav-link" href="3d" Match="NavLinkMatch.All">
					<span class="oi" aria-hidden="true"></span> @DisplayNames["3D Portfolio"]
				</NavLink>
			</li>
		</ul>
	</div>
}